<Activity mc:Ignorable="sap sap2010" x:Class="Get_MinMaxMed" this:Get_MinMaxMed.in_reportFile="Data\Output\MinMaxMed.xlsx" this:Get_MinMaxMed.in_transactionItem="14104044" this:Get_MinMaxMed.in_copmaniiFile="Data\Output\Companii.xlsx" this:Get_MinMaxMed.in_dttransactionData="[new DataTable]" this:Get_MinMaxMed.in_cuiDepSubFunc="Heehoo" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_reportFile" Type="InArgument(x:String)" />
    <x:Property Name="in_transactionItem" Type="InArgument(x:String)" />
    <x:Property Name="in_copmaniiFile" Type="InArgument(x:String)" />
    <x:Property Name="in_dttransactionData" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_cuiDepSubFunc" Type="InArgument(x:String)" />
    <x:Property Name="in_category" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1207.33333333333,1188.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Get_MinMaxMed_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="58">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="28">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow gets the minimal, maximal and median value for every column for every CUI, Department, Subdepartment and fuction in the Companii.xlsx.&#xA;It then puts the values in another workbook." DisplayName="Get_MinMaxMed" sap:VirtualizedContainerService.HintSize="756,938.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="fileExists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[in_dttransactionData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="714,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[in_transactionItem]" WorkbookPath="[in_copmaniiFile]" />
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xD;&#xA;'dttransitoryData=dttransactionData&#xD;&#xA;Dim transitoryList = New List(Of DataRow)&#xD;&#xA;Dim minList = New List(Of String)&#xD;&#xA;Dim maxList = New List(Of String)&#xD;&#xA;Dim medList = New List(Of String)&#xD;&#xA;minList.Add(&quot; &quot;)&#xD;&#xA;minList.Add(&quot;MIN&quot;)&#xD;&#xA;maxList.Add(&quot; &quot;)&#xD;&#xA;maxList.Add(&quot;MAX&quot;)&#xD;&#xA;medList.Add(cuiDepSubFunc)&#xD;&#xA;medList.Add(&quot;MED&quot;)&#xD;&#xA;Try&#xD;&#xA; For Each column As DataColumn In dttransactionData.Columns.Cast(Of DataColumn).Skip(3)&#xD;&#xA;&#x9;Dim rowList = New List(Of Double)&#xD;&#xA;&#x9; 'rowList = columndata.Table.AsEnumerable.Select(Function(row) convert.ToDouble(row)).ToList&#xD;&#xA;&#x9;rowList = (From row As DataRow In dttransactionData.Rows.Cast(Of DataRow)() Select Convert.ToDouble(row(column.ColumnName))).ToList&#xD;&#xA;&#x9;rowList.Sort()&#xD;&#xA;&#x9;minList.Add(rowList.First.ToString)&#xD;&#xA;&#x9;maxList.Add(rowList.Last.ToString)&#xD;&#xA;&#x9;If rowList.Count Mod 2 &gt; 0&#xD;&#xA;&#x9;&#x9;medList.Add(rowlist(CInt(rowlist.Count/2)).ToString)&#xD;&#xA;&#x9;&#x9;Else&#xD;&#xA;&#x9;&#x9;&#x9;medlist.Add(((rowList(CInt(rowList.Count/2)) + rowList(CInt(rowList.Count/2) - 1))/2).ToString)&#xD;&#xA;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;'transitoryList=&#x9;column.table.AsEnumerable.ToList&#xD;&#xA;'transitoryList.Sort()&#xD;&#xA;'minList.Add(transitoryList.First.ToString)&#xD;&#xA;'maxList.Add(transitoryList.Last.ToString)&#xD;&#xA;'If transitoryList.Count Mod 2 &gt; 0 Then&#xD;&#xA;&#x9;'medList.Add(transitoryList(CInt(transitoryList.Count/2)))&#xD;&#xA;'Else &#xD;&#xA;&#x9;'Dim firstHalf As String&#xD;&#xA;&#x9;'Dim secondHalf As String&#xD;&#xA;&#x9;'firstHalf = transitoryList.IndexOf(0)&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;'((CInt(transitoryList.Item(CInt(transitoryList.Count / 2)).Item) + CInt(transitoryList.Item(CInt(transitoryList.Count / 2 - 1)).Item)) / 2).ToString&#xD;&#xA;'End If&#xD;&#xA;Next&#xD;&#xA;Catch e As Exception&#xD;&#xA;&#x9;console.WriteLine(e)&#xD;&#xA;End Try&#xD;&#xA;dttransactionData.Clear()&#xD;&#xA;dttransactiondata.Columns.RemoveAt(0)&#xD;&#xA;dttransactionData.Columns(0).ColumnName = &quot; TEst&quot;&#xD;&#xA;dttransactionData.Columns(1).ColumnName = &quot; TESt&quot;&#xD;&#xA;Dim categoryRow = dttransactiondata.NewRow&#xD;&#xA;dttransactionData.Rows.Add(categoryRow)&#xD;&#xA;dttransactionData.Rows.Add(minList.ToArray)&#xD;&#xA;dttransactionData.rows.Add(medList.ToArray)&#xD;&#xA;dttransactionData.rows.Add(maxList.ToArray)&#xD;&#xA;Dim blankRow = dttransactiondata.NewRow&#xD;&#xA;blankRow(0) = &quot;  &quot;&#xD;&#xA;dttransactionData.Rows.Add(blankRow)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="714,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dttransactionData">
          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="in_dttransactionData" />
        </InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="cuiDepSubFunc">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_cuiDepSubFunc" />
        </InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:FileExistsX DisplayName="File Exists" Exists="[fileExists]" sap:VirtualizedContainerService.HintSize="714,135.333333333333" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="[Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), &quot;Trx_Test.xlsx&quot;)]" />
    <If Condition="[fileExists]" sap:VirtualizedContainerService.HintSize="714,278.666666666667" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <ui:AppendRange DataTable="[in_dttransactionData]" DisplayName="Append Range" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="AppendRange_1" SheetName="Sheet1" WorkbookPath="[Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), &quot;Trx_Test.xlsx&quot;)]" />
      </If.Then>
      <If.Else>
        <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[in_dttransactionData]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="[Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), &quot;Trx_Test.xlsx&quot;)]" />
      </If.Else>
    </If>
  </Sequence>
</Activity>